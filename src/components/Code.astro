---
import { Code as DefaultCode } from "astro:components"

type Lang = "ts" | "js" | "tsx"

interface Props {
    title?: string;
    code: string;
    lang?: Lang;
    wrap?: boolean;
    inline?: boolean
}

const { code, lang = "ts", title, wrap = true, inline = false } = Astro.props;
---

<div class="code">
    {
        title != null &&
            <header class="code__header">
                <h3>{title}</h3>
            </header>
    }
    <main class="code__main">
        <button id="copy_button" class="code__copy-button" data-code={code}>Copy</button>
        <DefaultCode {...{ code, lang, inline, wrap }} theme="dark-plus"   />
    </main>
</div>

<style>
    .code {
        display: flex;
        flex-direction: column;
        border: 0.1em solid var(--border-color);
        border-radius: 0.1em;
        filter: drop-shadow(0px 0px 10px rgba(255, 255, 255, 0.078));
    }

    .code__header {
        border-bottom: 0.1em solid var(--border-color);
        padding: 0.2em;
        font-size: 0.7em;
        font-weight: 100;
        text-align: center;
    }

    .code__main {
        position: relative;
    }

    .code__copy-button {
        position: absolute;
        top: 0;
        right: 0.3em;
        background-color: transparent;
        border: none;
        font-size: 0.8em;
        text-decoration: underline;
    }

    .code__copy-button:hover {
        color: inherit;
        filter: drop-shadow(0px 0px 1px rgba(255, 255, 255, 0.7811));
        
    }
</style>

<script>
    const $copyButton = document.getElementById('copy_button')
    const codeToCopy = $copyButton?.dataset.code

    const handleOnClickCopy = () => {
        navigator.clipboard.writeText(codeToCopy as string)
    }

    $copyButton?.addEventListener('click', handleOnClickCopy)
</script>